# %%
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# %%
fb_data = [
        (0.769445, 0.680853), (0.868540, -0.173120), (0.903268, -0.680367), 
        (0.154042, -0.935544), (-0.548072, -0.747431), (-0.181321, -0.180782), 
        (-0.890603, -0.670321), (0.611959, -0.328572), (0.190877, -0.787311), 
        (0.208243, 0.572368), (0.424405, 0.049773), (-0.225027, -0.187494), 
        (0.871004, -0.623218), (-0.174821, -0.780187), (-0.501868, -0.551592), 
        (0.160026, -0.694621), (-0.830474, 0.012603), (0.128415, -0.893568), 
        (0.302819, -0.673658), (-0.866237, 0.719184), (-0.463954, -0.093865), 
        (-0.430870, -0.385764), (0.209422, -0.780999), (0.241789, -0.574355), 
        (-0.606498, -0.515985), (-0.954638, 0.785009), (0.498379, -0.216353), 
        (-0.367378, 0.392351), (0.126534, 0.412812), (0.589093, 0.588633), 
        (0.818360, -0.219378), (0.855830, 0.950471), (0.754959, 0.009596), 
        (-0.907265, 0.091220), (0.306721, -0.820945), (-0.155315, 0.800736), 
        (0.044584, 0.376732), (-0.549419, -0.714636), (0.559660, 0.660422), 
        (-0.323791, 0.910731), (-0.818943, -0.311310), (0.738111, 0.638128), 
        (0.441288, -0.605144), (0.075502, -0.400041), (0.777162, -0.296908), 
        (-0.779958, 0.643847), (0.452140, -0.883571), (0.643080, 0.222421), 
        (0.092532, 0.662854), (-0.630263, -0.569655), (0.807803, 0.182123), 
        (-0.729457, -0.097994), (-0.402115, -0.316764), (0.151667, -0.799394), 
        (-0.635051, 0.795148), (-0.842965, -0.500487), (-0.483556, 0.850897), 
        (-0.827879, 0.921026), (-0.703107, 0.213937), (-0.452900, -0.884218), 
        (0.868810, -0.254765), (0.704284, 0.354610), (-0.189644, 0.359892), 
        (-0.375037, 0.865384), (0.074869, -0.038169), (-0.655446, -0.083930), 
        (-0.818406, -0.431922), (0.784522, -0.257748), (0.211759, -0.027044), 
        (-0.094096, 0.542324), (-0.207408, 0.023802), (-0.906598, 0.284953), 
        (-0.084930, -0.770280), (0.237717, 0.174397), (0.395045, 0.753927), 
        (0.244097, 0.312965), (-0.458948, -0.010134), (-0.300239, 0.314721), 
        (-0.602120, 0.290463), (0.225101, 0.431176), (-0.708661, 0.530296), 
        (-0.612717, -0.565174), (-0.876852, -0.795079), (0.137169, 0.304656), 
        (0.151447, -0.922939), (-0.121474, 0.906053), (0.061521, -0.062060), 
        (0.239381, 0.935738), (0.121320, -0.495783), (0.150989, -0.439437), 
        (-0.694442, -0.572968), (0.828729, -0.195001), (0.378873, -0.427744), 
        (-0.839368, 0.725214), (0.822871, 0.349921), (0.198426, -0.841529), 
        (-0.096290, 0.540982), (-0.448422, 0.003857), (0.729753, 0.652544), 
        (-0.659591, -0.079421), 
]

bh_data = [
        (0.769445, 0.680853), (0.868540, -0.173120), (0.903268, -0.680367), 
        (0.154042, -0.935544), (-0.548072, -0.747431), (-0.181321, -0.180782), 
        (-0.890603, -0.670321), (0.611959, -0.328572), (0.190877, -0.787311), 
        (0.208243, 0.572368), (0.424405, 0.049773), (-0.225027, -0.187494), 
        (0.871004, -0.623218), (-0.174821, -0.780187), (-0.501868, -0.551592), 
        (0.160026, -0.694621), (-0.830474, 0.012603), (0.128415, -0.893568), 
        (0.302819, -0.673658), (-0.866237, 0.719184), (-0.463954, -0.093865), 
        (-0.430870, -0.385764), (0.209422, -0.780999), (0.241789, -0.574355), 
        (-0.606498, -0.515985), (-0.954638, 0.785009), (0.498379, -0.216353), 
        (-0.367378, 0.392351), (0.126534, 0.412812), (0.589093, 0.588633), 
        (0.818360, -0.219378), (0.855830, 0.950471), (0.754959, 0.009596), 
        (-0.907265, 0.091220), (0.306721, -0.820945), (-0.155315, 0.800736), 
        (0.044584, 0.376732), (-0.549419, -0.714636), (0.559660, 0.660422), 
        (-0.323791, 0.910731), (-0.818943, -0.311310), (0.738111, 0.638128), 
        (0.441288, -0.605144), (0.075502, -0.400041), (0.777162, -0.296908), 
        (-0.779958, 0.643847), (0.452140, -0.883571), (0.643080, 0.222421), 
        (0.092532, 0.662854), (-0.630263, -0.569655), (0.807803, 0.182123), 
        (-0.729457, -0.097994), (-0.402115, -0.316764), (0.151667, -0.799394), 
        (-0.635051, 0.795148), (-0.842965, -0.500487), (-0.483556, 0.850897), 
        (-0.827879, 0.921026), (-0.703107, 0.213937), (-0.452900, -0.884218), 
        (0.868810, -0.254765), (0.704284, 0.354610), (-0.189644, 0.359892), 
        (-0.375037, 0.865384), (0.074869, -0.038169), (-0.655446, -0.083930), 
        (-0.818406, -0.431922), (0.784522, -0.257748), (0.211759, -0.027044), 
        (-0.094096, 0.542324), (-0.207408, 0.023802), (-0.906598, 0.284953), 
        (-0.084930, -0.770280), (0.237717, 0.174397), (0.395045, 0.753927), 
        (0.244097, 0.312965), (-0.458948, -0.010134), (-0.300239, 0.314721), 
        (-0.602120, 0.290463), (0.225101, 0.431176), (-0.708661, 0.530296), 
        (-0.612717, -0.565174), (-0.876852, -0.795079), (0.137169, 0.304656), 
        (0.151447, -0.922939), (-0.121474, 0.906053), (0.061521, -0.062060), 
        (0.239381, 0.935738), (0.121320, -0.495783), (0.150989, -0.439437), 
        (-0.694442, -0.572968), (0.828729, -0.195001), (0.378873, -0.427744), 
        (-0.839368, 0.725214), (0.822871, 0.349921), (0.198426, -0.841529), 
        (-0.096290, 0.540982), (-0.448422, 0.003857), (0.729753, 0.652544), 
        (-0.659591, -0.079421), 
]

n = 1000
step = 100

fb_data_1 = np.array(fb_data)
bh_data_1 = np.array(bh_data)

# Gráfica de diferencias entre FB y BH
fig, ax = plt.subplots(figsize=(10, 6))

# Coordenadas FB y BH en x e y
fb_x, fb_y = fb_data_1[:, 0], fb_data_1[:, 1]
bh_x, bh_y = bh_data_1[:, 0], bh_data_1[:, 1]

# Dibujar las posiciones de FB y BH
ax.scatter(fb_x, fb_y, color='blue', label='FB', marker='o')
ax.scatter(bh_x, bh_y, color='red', label='BH', marker='x')

# Dibujar líneas entre cada punto FB y BH
for i in range(len(fb_x)):
    ax.plot([fb_x[i], bh_x[i]], [fb_y[i], bh_y[i]], color='gray', linestyle='--', linewidth=0.8)

# Etiquetas y leyenda
ax.set_xlabel("Posición X")
ax.set_ylabel("Posición Y")
ax.set_title(f"Diferencia de posiciones entre métodos FB y BH en el último paso\n Num Points: {n} - Steps: {step}")
ax.legend()
plt.grid(True)
plt.show()
# %%
