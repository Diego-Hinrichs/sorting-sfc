# %%
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
fb_data = [
        (0.523686, 0.097942), (-0.199989, -0.168909), (-0.189073, -0.141767), 
        (-0.315262, 0.149437), (0.839647, -0.035307), (-0.004548, 0.000874), 
        (0.347747, 1.305540), (-0.180277, -0.007405), (0.131321, -0.118126), 
        (-0.097787, 0.047441), (-0.702410, -0.311043), (0.076929, -0.191781), 
        (-0.121085, 0.027238), (-0.121790, -0.090145), (-0.608085, 0.799453), 
        (-0.689454, 0.440405), (-0.123628, -0.272286), (0.707587, 0.603445), 
        (-0.846609, 0.121579), (0.508019, -1.782273), (0.834907, -1.312455), 
        (0.276397, 0.238908), (-0.312368, -0.452408), (-0.050604, -0.299775), 
        (0.342331, 0.017997), (0.379048, -0.191641), (-0.443714, 0.869454), 
        (0.410541, -0.144520), (-0.018211, -0.061767), (-0.113935, 0.079219), 
        (-0.075210, 0.020172), (-0.382960, -1.467247), (-0.018583, -0.018362), 
        (-0.056477, 0.103706), (1.734442, 0.978046), (0.130678, 0.166287), 
        (0.663451, -0.197057), (-0.096208, -0.029495), (0.031265, -0.009929), 
        (-0.046720, -0.213712), (0.133347, 0.342879), (0.285943, -0.017431), 
        (0.403750, 0.002166), (0.050900, -0.010053), (0.703073, -0.322786), 
        (-0.113254, 0.072396), (-0.689761, 0.221683), (0.107391, -0.036579), 
        (-1.355027, 0.454631), (-0.095534, -0.040565), (0.089348, 0.101516), 
        (0.229061, -0.445144), (-0.328169, 0.100383), (0.156203, 0.081019), 
        (-0.217883, 0.205353), (-0.099310, 0.062963), (0.924261, -0.095413), 
        (0.019991, 0.003853), (0.187881, -0.009369), (0.767172, -0.004159), 
        (0.098130, 0.010204), (0.009694, 0.032093), (-0.244405, 0.067451), 
        (-0.039082, -0.082884), (-0.849393, -0.197306), (-0.281860, 0.052999), 
        (0.113379, -0.038775), (0.094518, -0.044570), (0.388944, -0.001306), 
        (-0.130747, 0.001548), (-0.157257, 0.096915), (-0.111599, 0.447998), 
        (-0.767638, -0.066420), (-0.207719, 0.361788), (-0.084984, 0.014285), 
        (-0.106555, 0.004386), (0.162453, -0.754287), (-0.394240, 0.575416), 
        (0.171690, -0.868177), (-0.228480, 0.004507), (0.198846, -0.197561), 
        (-0.069333, -0.013575), (-0.069477, 0.039950), (-0.113910, 0.173373), 
        (0.138764, -0.455059), (0.345347, 0.312693), (0.105807, -1.014375), 
        (-0.439181, 0.455294), (0.187635, -0.127994), (-0.119353, -0.252404), 
        (-0.276129, 0.060967), (-0.035981, -0.025767), (-1.444191, 0.146731), 
        (0.230700, -0.082113), (-0.303692, -0.020353), (0.269477, 0.350633), 
        (-0.510494, -0.091899), (-0.131387, -0.093608), (0.631237, -0.473400), 
        (-0.054847, -0.024424), 
]

bh_data = [
        (0.126187, -0.098780), (0.229676, -0.451759), (-0.525946, 0.112603), 
        (0.278450, -0.173882), (1.060995, -1.626206), (-0.038274, -0.057283), 
        (0.167683, 1.119034), (0.016767, -0.022948), (1.128396, 0.461577), 
        (0.004111, 0.212195), (-0.024697, -0.054439), (-0.160670, -0.016795), 
        (0.253887, -0.113413), (0.135462, 0.086635), (-0.392846, -0.457903), 
        (-0.794125, -0.353830), (0.488059, 0.047288), (0.465690, -0.143992), 
        (0.600884, 0.226084), (1.376543, -1.353615), (1.530987, -0.722048), 
        (-0.399418, -0.042480), (-0.116026, 0.038099), (-0.494578, -0.475027), 
        (-0.024203, 0.165715), (-0.067546, -0.199830), (0.230791, 0.386499), 
        (-0.119366, 0.163996), (0.101490, -0.057096), (0.189028, 0.369131), 
        (-0.024851, 0.133955), (0.519812, -0.368819), (-0.065442, -0.031487), 
        (0.207659, -0.131471), (2.036245, 0.250534), (-0.045613, 0.038945), 
        (-0.103760, 0.335932), (0.379501, -0.096308), (-0.695831, -0.150749), 
        (0.125553, 0.688381), (-0.074814, 0.141151), (-0.137997, -0.214598), 
        (-0.019274, -0.070262), (-0.123851, -0.070206), (1.181246, 0.700732), 
        (-0.425404, -0.042424), (-0.331629, 0.443026), (-0.031598, 0.096652), 
        (-1.068196, -0.685979), (-0.082566, 0.167835), (-0.180404, 0.282886), 
        (-0.114203, -0.103719), (-0.575760, 0.318592), (-0.121196, -0.370384), 
        (-0.193770, 0.027732), (0.226520, 0.173163), (-0.262527, -0.073603), 
        (-0.023478, 0.079021), (-0.453753, -0.484663), (0.551430, 0.050781), 
        (-0.026002, -0.032998), (0.431517, -0.742263), (-0.027157, 0.007987), 
        (-0.090288, -0.293701), (-0.457344, -0.490300), (-0.253674, 0.158589), 
        (-0.118128, -0.050528), (-0.239616, 0.284314), (-0.199057, -0.009856), 
        (-0.111020, -0.053338), (-0.038845, 0.142258), (-0.178374, -0.001611), 
        (-0.079061, -0.187930), (-0.222460, -0.124561), (-0.138897, -0.008820), 
        (0.014505, 0.330701), (-0.108051, -0.289688), (0.322652, -1.389558), 
        (-0.876950, 0.575123), (-0.766091, 0.345084), (-0.072710, 0.255521), 
        (0.064102, 0.212057), (0.873613, 0.262525), (-0.011000, -0.177713), 
        (-0.562779, -1.065700), (0.074218, 0.104422), (-0.950263, 1.184012), 
        (-0.056496, -0.387287), (-0.088285, -0.103784), (-0.050083, 0.006748), 
        (-0.948065, 0.438016), (-0.235681, -0.148477), (-0.435778, 0.186210), 
        (-0.263550, -0.150647), (0.436554, -0.379817), (-0.037441, 0.534727), 
        (-0.370755, -0.147910), (0.195274, -0.016344), (-0.336064, 0.566723), 
        (-0.104829, 0.155691), 
]

n = 100
step = 1000000

fb_data_1 = np.array(fb_data)
bh_data_1 = np.array(bh_data)

# %%
# Gráfica de diferencias entre FB y BH
fig, ax = plt.subplots(figsize=(10, 6))

# Coordenadas FB y BH en x e y
fb_x, fb_y = fb_data_1[:, 0], fb_data_1[:, 1]
bh_x, bh_y = bh_data_1[:, 0], bh_data_1[:, 1]

# Dibujar las posiciones de FB y BH
ax.scatter(fb_x, fb_y, color='blue', label='FB', marker='o')
ax.scatter(bh_x, bh_y, color='red', label='BH', marker='x')

# Dibujar líneas entre cada punto FB y BH
for i in range(len(fb_x)):
    ax.plot([fb_x[i], bh_x[i]], [fb_y[i], bh_y[i]], color='gray', linestyle='--', linewidth=0.8)

# Etiquetas y leyenda
ax.set_xlabel("Posición X")
ax.set_ylabel("Posición Y")
ax.set_title(f"Diferencia de posiciones entre métodos FB y BH en el último paso\n Num Points: {n} - Steps: {step}")
ax.legend()
plt.grid(True)
plt.show()
# %%
