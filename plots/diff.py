import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

fb_data = [
        (-0.075521, -0.302488), (-0.408008, -0.312671), (0.383863, -0.045158), 
        (-0.016753, -0.501146), (0.154595, -0.467023), (0.127590, -0.513067), 
        (0.676202, -0.781935), (0.010458, -0.399734), (-0.194486, -0.494279), 
        (0.119640, 0.753671), (-0.401851, 0.314260), (-0.047261, -0.058731), 
        (-0.009346, -0.176421), (0.046143, -0.473947), (-0.241269, 0.190258), 
        (-0.143902, -0.241523), (-0.110899, -0.469137), (-0.586680, 0.420778), 
        (-1.428148, -2.235527), (0.251313, 0.443431), (-1.010476, 1.192466), 
        (-0.042073, -0.137221), (0.005057, -0.392333), (-0.058345, 0.194413), 
        (-0.162706, -0.477134), (0.111922, -0.298315), (1.482274, -1.266093), 
        (0.130941, 0.020631), (-0.161491, 0.301258), (-0.240154, -0.385467), 
        (0.411046, 0.336941), (1.382633, -1.333328), (-0.033061, 0.008194), 
        (-0.006827, -0.115500), (1.569580, 1.744326), (-0.131690, -0.314426), 
        (-0.054433, 0.659651), (-0.059287, -0.262888), (-0.132738, 0.044661), 
        (-0.131816, 0.008967), (0.139735, -0.343169), (-0.319074, 0.329981), 
        (-0.293006, -0.023588), (0.208356, -0.393053), (0.617611, 1.074144), 
        (-0.101815, -0.367822), (-1.198357, 1.685560), (0.058092, -0.358380), 
        (-0.149839, -0.289196), (-1.517202, -1.976035), (0.005321, -0.295673), 
        (0.049587, 0.626754), (-0.261926, -0.200629), (0.176094, 0.841671), 
        (-0.047645, 0.742825), (-0.054798, -0.016680), (-0.050157, -0.350036), 
        (-0.049647, 0.640893), (0.042765, -0.130569), (1.674233, 1.816754), 
        (-0.031460, -0.213866), (1.331263, 1.256693), (0.166532, -0.033485), 
        (-0.267865, -0.131511), (0.229430, -0.875609), (0.112144, 0.035947), 
        (0.133371, 0.611928), (-0.390706, 0.315885), (-0.217744, -0.639301), 
        (-0.170902, 0.270234), (-0.155727, 0.372000), (-0.054034, -0.378258), 
        (-0.415891, 0.320082), (-0.134446, -0.285635), (-0.162891, 0.004328), 
        (-0.042405, -0.098105), (-0.025583, 0.695013), (-1.167182, 1.694006), 
        (0.638696, -0.751214), (-0.193264, -0.295434), (0.358063, 0.351662), 
        (-0.141105, -0.335564), (0.115730, 0.052492), (-0.121164, -0.272530), 
        (-0.119231, 0.155411), (-0.016319, -0.222118), (-0.264737, 0.468910), 
        (-0.547627, 0.676464), (-0.102049, -0.272328), (0.106886, -0.338201), 
        (0.676075, 1.083224), (-0.025289, -0.142242), (0.701584, 1.091270), 
        (-0.079957, -0.372188), (-0.444580, 0.124145), (-0.047113, -0.005731), 
        (-0.012455, -0.267040), (-0.011839, -0.051583), (-0.333262, 0.403996), 
        (-0.002670, -0.087842), 
]

bh_data = [
        (-0.081479, -0.294457), (-0.407192, -0.317128), (0.386891, -0.059310), 
        (-0.035432, -0.495203), (0.131880, -0.487176), (-0.029092, -0.380990), 
        (0.567287, -0.738264), (0.050758, -0.389529), (-0.199432, -0.498225), 
        (0.125018, 0.696257), (-0.373564, 0.254324), (-0.076955, -0.143612), 
        (-0.010730, -0.095243), (0.027176, -0.489205), (-0.271131, 0.321517), 
        (-0.091005, -0.175151), (0.017953, -0.491277), (-0.307218, 0.154717), 
        (-1.433416, -2.238969), (0.251118, 0.476263), (-1.252023, 1.422618), 
        (-0.170993, 0.101146), (-0.008065, -0.394733), (-0.046118, 0.113778), 
        (-0.233414, -0.332865), (0.097666, -0.334950), (1.493367, -1.267233), 
        (0.167663, 0.052716), (-0.168767, 0.230330), (-0.233633, -0.376191), 
        (0.390209, 0.351746), (1.425392, -1.327138), (-0.093843, 0.007125), 
        (-0.031053, -0.155838), (1.657619, 1.896584), (-0.146043, -0.330476), 
        (0.036124, 0.657035), (-0.052623, -0.244467), (-0.116157, 0.018637), 
        (-0.120814, -0.000019), (0.136760, -0.287829), (-0.343057, 0.299712), 
        (0.217922, -0.486792), (0.089191, -0.417228), (0.614862, 1.069732), 
        (-0.080476, -0.361533), (-1.256899, 1.603296), (0.023992, -0.357277), 
        (-0.216691, -0.285499), (-1.521975, -1.985735), (0.012221, -0.266670), 
        (0.087487, 0.682397), (-0.202417, -0.023866), (0.196248, 0.808528), 
        (-0.028463, 0.702422), (-0.064730, -0.023006), (-0.046808, -0.380741), 
        (-0.087953, 0.678639), (0.026415, -0.159074), (1.626998, 1.792559), 
        (-0.066667, -0.218911), (1.316071, 1.275755), (0.205138, 0.025658), 
        (-0.282691, -0.089262), (0.226069, -0.899469), (0.153856, 0.093334), 
        (0.016379, 0.512309), (-0.361914, 0.333856), (-0.257110, -0.640449), 
        (-0.320855, 0.308841), (-0.126681, 0.369877), (-0.067638, -0.359069), 
        (-0.347867, 0.304668), (-0.103338, -0.277531), (-0.157382, -0.018535), 
        (-0.009471, -0.158696), (-0.063468, 0.624339), (-1.136703, 1.634534), 
        (0.629568, -0.685759), (-0.084041, -0.372049), (0.346252, 0.437377), 
        (-0.123689, -0.370533), (0.167301, 0.096768), (-0.124239, -0.300534), 
        (-0.103335, 0.165351), (-0.037612, -0.291428), (-0.333887, 0.400177), 
        (-0.579230, 0.690777), (-0.061299, -0.354767), (0.026050, -0.298758), 
        (0.673856, 1.092632), (-0.088152, -0.081742), (0.695418, 1.069653), 
        (-0.072346, -0.346388), (-0.442348, 0.123890), (-0.011869, -0.030592), 
        (-0.021747, -0.304718), (-0.021635, 0.003803), (-0.273642, 0.509950), 
        (-0.074989, -0.152236), 
]

fb_positions = np.array(fb_data)
bh_positions = np.array(bh_data)
# Gráfica de diferencias entre FB y BH
fig, ax = plt.subplots(figsize=(10, 6))

# Coordenadas FB y BH en x e y
fb_x, fb_y = fb_positions[:, 0], fb_positions[:, 1]
bh_x, bh_y = bh_positions[:, 0], bh_positions[:, 1]

# Dibujar las posiciones de FB y BH
ax.scatter(fb_x, fb_y, color='blue', label='FB', marker='o')
ax.scatter(bh_x, bh_y, color='red', label='BH', marker='x')

# Dibujar líneas entre cada punto FB y BH
for i in range(len(fb_x)):
        ax.plot([fb_x[i], bh_x[i]], [fb_y[i], bh_y[i]], color='gray', linestyle='--', linewidth=0.8)

# Etiquetas y leyenda
ax.set_xlabel("Posición X")
ax.set_ylabel("Posición Y")
ax.set_title("Diferencia de posiciones entre métodos FB y BH en el último paso")
ax.legend()
plt.grid(True)
plt.show()
